cwlVersion: v1.0
class: CommandLineTool

label: "TransDecoder.LongOrfs: Perl script, which extracts the long open reading frames"

doc: |
      TransDecoder identifies candidate coding regions within transcript sequences, 
      such as those generated by de novo RNA-Seq transcript assembly using Trinity,
      or constructed based on RNA-Seq alignments to the genome using Tophat and Cufflinks.
      
      TransDecoder identifies likely coding sequences based on the following criteria:
            + a minimum length open reading frame (ORF) is found in a transcript sequence
            + a log-likelihood score similar to what is computed by the GeneID software is > 0.
            + the above coding score is greatest when the ORF is scored in the 1st reading frame
            as compared to scores in the other 2 forward reading frames.
            + if a candidate ORF is found fully encapsulated by the coordinates of another candidate ORF,
            the longer one is reported. However, a single transcript can report multiple ORFs 
            (allowing for operons, chimeras, etc).
            + a PSSM is built/trained/used to refine the start codon prediction.
            + optional the putative peptide has a match to a Pfam domain above the noise cutoff score.
            
      Please visit https://github.com/TransDecoder/TransDecoder/wiki for full documentation.
      
      Releases can be downloaded from https://github.com/TransDecoder/TransDecoder/releases
      

requirements:
  ResourceRequirement:
    ramMin: 1024
    coresMin: 1
  SchemaDefRequirement:
    types: 
      - $import: TransDecoder.LongOrfs-5-genetic_codes.yaml
#hints:
#  SoftwareRequirement:
#    packages:
#      transdecoder:
#        specs: [ "" ]
#        version: [ "5.0.0", "5.0.1", "5.0.2" ]

inputs:
  transcriptsFile:
    label: "transcripts.fasta"
    type: File
    doc: "FASTA formatted sequence file containing your transcripts."
#    format: edam:format_1929  # FASTA
    inputBinding:
      prefix: -t
  minimumProteinLength:
    label: "minimum protein length"
    type: int?
    doc: "minimum protein length (default: 100)"
    inputBinding:
      prefix: -m
  geneToTranscriptMap:
    label: "gene-to-transcript mapping"
    type: File?
    doc: "gene-to-transcript identifier mapping file (tab-delimited, gene_id<tab>trans_id<return>)"
    inputBinding:
      prefix: --gene_trans_map
  strandSpecific:
    label: "strand-specific"
    type: boolean?
    doc: "strand-specific (only analyzes top strand)"
    inputBinding:
      prefix: -S
  geneticCode:
    label: "genetic code"
    type: TransDecoder.LongOrfs-5-genetic_codes.yaml#genetic_codes[]?
    doc: "genetic code (default: universal; see PerlDoc; options: Euplotes, Tetrahymena, Candida, Acetabularia)"
    inputBinding:
      prefix: -G

baseCommand: TransDecoder.LongOrfs

outputs:
  workingDir:
    type: Directory
    outputBinding:
      glob: $(inputs.transcriptsFile.basename).transdecoder_dir

$namespaces:
 s: http://schema.org/
 edam: http://edamontology.org/
$schemas:
 - http://edamontology.org/EDAM_1.20.owl
 - https://schema.org/docs/schema_org_rdfa.html

s:license: "https://www.apache.org/licenses/LICENSE-2.0"
s:copyrightHolder: "EMBL - European Bioinformatics Institute, 2018"
